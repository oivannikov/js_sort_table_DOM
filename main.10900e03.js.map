{"version":3,"sources":["scripts/main.js"],"names":["trs","document","querySelectorAll","thead","querySelector","tbody","addEventListener","event","indexHead","children","indexOf","target","findSorting","textContent","isNaN","parseFloat","sortedNumber","sort","curr","next","localeCompare","append","replacementSigns","normalizeString","replace"],"mappings":";AAAA,aAMA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAJA,IAAMA,EAAUC,EAAAA,SAASC,iBAAiB,aACpCC,EAAQF,SAASG,cAAc,YAC/BC,EAAQJ,SAASG,cAAc,SAErCD,EAAMG,iBAAiB,QAAS,SAACC,GACzBC,IAAAA,EAAY,EAAIL,EAAMM,UAAUC,QAAQH,EAAMI,QAC9CC,EAAcZ,EAAIQ,GAAWC,SAASD,GAG1CI,GAA+B,MAA/BA,EAAYC,YAAY,IACpBC,MAAMC,WAAWH,EAAYC,cAQ5B,CACCG,IAAAA,EAAe,EAAIhB,GAAKiB,KAAK,SAACC,EAAMC,GACjCD,OAAAA,EAAKT,SAASD,GAAWK,YAC7BO,cAAcD,EAAKV,SAASD,GAAWK,eAG5CR,EAAMgB,OAANhB,MAAAA,EAAgBW,EAAAA,QAbhB,CACMA,IAAAA,EAAe,EAAIhB,GAAKiB,KAAK,SAACC,EAAMC,GACjCG,OAAAA,EAAiBJ,EAAKT,SAASD,GAAWK,aAC7CS,EAAiBH,EAAKV,SAASD,GAAWK,eAGhDR,EAAMgB,OAANhB,MAAAA,EAAgBW,EAAAA,IAUTM,SAAAA,EAAiBC,GACjBA,OAAAA,EAAgBC,QAAQ,IAAK,IAAIA,QAAQ,IAAK","file":"main.10900e03.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst trs = [...document.querySelectorAll('tbody tr')];\nconst thead = document.querySelector('thead tr');\nconst tbody = document.querySelector('tbody');\n\nthead.addEventListener('click', (event) => {\n  const indexHead = [...thead.children].indexOf(event.target);\n  const findSorting = trs[indexHead].children[indexHead];\n\n  if (\n    findSorting.textContent[0] === '$'\n    || !isNaN(parseFloat(findSorting.textContent))\n  ) {\n    const sortedNumber = [...trs].sort((curr, next) => {\n      return replacementSigns(curr.children[indexHead].textContent)\n        - replacementSigns(next.children[indexHead].textContent);\n    });\n\n    tbody.append(...sortedNumber);\n  } else {\n    const sortedNumber = [...trs].sort((curr, next) => {\n      return curr.children[indexHead].textContent\n        .localeCompare(next.children[indexHead].textContent);\n    });\n\n    tbody.append(...sortedNumber);\n  }\n\n  function replacementSigns(normalizeString) {\n    return normalizeString.replace('$', '').replace(',', '');\n  }\n});\n"]}